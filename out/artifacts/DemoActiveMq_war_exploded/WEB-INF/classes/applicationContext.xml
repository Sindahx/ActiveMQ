<?xml version="1.0" encoding="UTF-8"?>
<!-- 查找最新的schemaLocation 访问 http://www.springframework.org/schema/ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd">
     
     <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
     
     <!-- 配置扫描路径 -->
     <context:component-scan base-package="com.tgb">
     	<!-- 只扫描Service，也可以添加Repostory，但是要把Controller排除在外，Controller由spring-mvc.xml去加载 -->
     	<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" /> -->
     	<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" /> -->
     	<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" /> -->
     	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
     </context:component-scan>

	<!-- 加载数据源配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:source.properties</value>
			</list>
		</property>
	</bean>



	<!-- 连接数据源的资源配置文件（连接地址、用户、密码、大小等） -->
	<bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass">
			<value>${source.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${center.source.url}</value>
		</property>
		<property name="user" >
			<value>root</value>
		</property>
		<!-- property池启动时的初始值 -->
		<property name="password">
			<value>root</value>
		</property>
		<!--初始化连接池中连接数。-->
		<property name="initialPoolSize" value="3" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="3" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="150" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="1000" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
	</bean>

	<bean name="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource2"/>
	</bean>
	<bean name="namedParameterJdbc" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource2"/>
	</bean>
	<!-- 配置transactionManager事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource2" />
	</bean>



	<import resource="classpath:redis-servlet.xml" />
	<!-- 对string操作的封装 -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		  p:connection-factory-ref="jedisConnectionFactory" />
	<!-- rides 连接配置 end -->

</beans>  